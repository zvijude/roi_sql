generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder", "omitApi", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  INSTALLER
  C_INSTALLER
  PRJ_MNGR
  SITE_MNGR
  ADMIN
  KABLAN
}

model User {
  id        Int     @id @default(autoincrement())
  firstName String
  lastName  String
  name      String? @default(dbgenerated())
  role      Role    @default(INSTALLER)
  email     String  @unique

  phone    String?   @unique
  projects Project[]

  company   Company @relation(fields: [companyId], references: [id])
  companyId Int
  kablanId  Int?

  gglSub  String?
  gglName String?
  picture String?

  probs        Prob[] @relation("reqBy")
  solvedProbs  Prob[] @relation("solvedBy")
  scans        Scan[]
  qrCreatedBy  Qr[]
  createdTasks Task[] @relation("createdBy")
  resTasks     Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  id   Int    @id @default(autoincrement())
  name String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
  users     User[]
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  company   Company  @relation(fields: [companyId], references: [id])
  companyId Int
  users     User[]
  printQntt Int?
  aptOpts   String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks Task[]
  probs Prob[]
  scans Scan[]
}

model Part {
  id   Int    @id @default(autoincrement())
  name String
  desc String
  qntt Int
  qr   Qr[]

  prjId   Int
  tasksId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, prjId])
}

model MainTask {
  id           Int      @id @default(autoincrement())
  title        String
  desc         String
  tasksId      Int
  prjId        Int
  order        Int
  tasks        Task[]
  for          Role     @default(INSTALLER)
  price        Int      @default(0)
  needMedia    Boolean? @default(false)
  needApproval Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
